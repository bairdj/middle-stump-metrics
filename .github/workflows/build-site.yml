name: build-site
on:
  push:
    branches: [ actions, main ]
  schedule:
    - cron: '0 3 * * *'
  workflow_dispatch: {}
jobs:
  load-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout parse-cricsheet
        uses: actions/checkout@v3
        with:
          repository: bairdj/parse-cricsheet
      - name: Download Cricsheet data
        run: |
          wget https://cricsheet.org/downloads/tests_male_json.zip
          wget https://cricsheet.org/register/people.csv
      - name: Check if DB needs rebuilding
        id: check-db-cache
        uses: actions/cache@v3
        with:
          path: output.db
          key: ${{ hashFiles('tests_male_json.zip', 'people.csv') }}
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        if: steps.check-db-cache.outputs.cache-hit != 'true'
      - name: Install dependencies
        run: dotnet restore
        if: steps.check-db-cache.outputs.cache-hit != 'true'
      - name: Run
        run: dotnet run --register people.csv tests_male_json.zip output.db
        if: steps.check-db-cache.outputs.cache-hit != 'true'
      - name: Upload database
        uses: actions/upload-artifact@v3
        with:
          name: output.db
          path: output.db
  build-site:
    runs-on: ubuntu-latest
    needs: load-data
    env:
      RENV_PATHS_ROOT: ~/.local/share/renv
    steps:
      - uses: actions/checkout@v3
      - name: Load data artifact
        uses: actions/download-artifact@v2
        id: download
        with:
          name: output.db
      - name: Print artifact contents
        run: ls -l ${{ steps.download.outputs.download-path }}
      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.2.1'
      - name: Install additional libraries
        run: sudo apt-get install -y libcurl4-openssl-dev
      - name: Install renv
        shell: Rscript {0}
        run: install.packages("renv")
      - name: Cache R packages
        uses: actions/cache@v3
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: ${{ runner.os }}-renv-${{ hashFiles('renv.lock') }}
      - name: Restore renv
        shell: Rscript {0}
        run: renv::restore()
      - name: Install Quarto
        uses: quarto-dev/quarto-actions/setup@v2
      - name: Render site
        uses: quarto-dev/quarto-actions/render@v2
        env:
          DB_LOCATION: ${{ steps.download.outputs.download-path }}/output.db
        with:
          to: html
      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: _site
  deploy:
    needs: build-site
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        